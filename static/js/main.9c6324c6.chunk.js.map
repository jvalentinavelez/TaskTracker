{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","todo","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","tasktoToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c6324c6.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n           <button onClick={onClick}  style={{backgroundColor: color}} className='btn'>{text}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","\n// const Header = (props) => {\n//     return (\n//         <header>\n//             <h1>{props.title}</h1>\n//         </header>\n//     )\n// }\n\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport {useLocation} from 'react-router-dom'\n\n\n//Destructuring as object ({}), there is no need to use {props.title}\nconst Header = ({ title, onAdd, showAdd }) => {\n    // const onClick = () => {\n    //     console.log('click')\n    // }\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            {/* <h1 style={{color:'red',backgroundColor:'black'}}>{title}</h1> */}\n            {/* <h1 style={headingStyle}>{title}</h1> */}\n            <h1>{title}</h1>\n            {/* <button className='btn'>Add</button> */}\n            {location.pathname  === '/' && (\n                <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n            )}\n            {/* <Button color='blue' text='Hello 1'/>\n            <Button color='red' text='Hello 2'/> */}\n        </header>\n    )\n}\n\n//Stablish default props for Header component\nHeader.defaultProps = {\n    title:'Task Tracker',\n}\n\nHeader.propTypes={\n    title: PropTypes.string.isRequired,\n}\n\n//CSS in JSX\n// const headingStyle = {\n//     color:'red',backgroundColor:'black'\n// }\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={\n            () => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{ color:\n                 'red', cursor: 'pointer'}} \n                 onClick={ ()=> onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n//setTasks, function that updates the state\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n           {tasks.map((task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/> \n                // key={task.id} parent of the list should have a key prop\n           ))} \n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (!text){\n            alert('Please add a task')\n            return\n        }\n        onAdd({text,day,reminder})\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} \n                onChange={(e)=> setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' value={day} \n                onChange={(e)=> setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} \n                onChange={(e)=> setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import {Link} from 'react-router-dom'\n\nconst Footer=() => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to='/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {Link} from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n           <h4>Version 1.0.0</h4> \n           <Link to='/'>Go back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import {useState, useEffect} from 'react' //Hook useState\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n//Stores the events\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false) \n  \n  // const [todo, setTasks] = useState([\n  //   {\n  //       id:1,\n  //       text:'Doctors Appointment',\n  //       day:'Feb 5th at 2:30pm',\n  //       reminder:true,\n  //   },\n  //   {\n  //       id:2,\n  //       text:'Meeting at School',\n  //       day:'Feb 6th at 1:30pm',\n  //       reminder:true,\n  //   },\n  // ])\n\n  const [todo, setTasks] = useState([])\n\n\n  // JSON server\n\n  useEffect(()=>{\n    const getTasks = async() => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n\n    }\n    getTasks()\n  },[])\n\n  // Fetch Tasks\n  const fetchTasks = async () =>{\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  //Fetch invididual task\n  const fetchTask = async (id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add Task\n  \n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000)+1 \n  //   //adds id and all the properties and values from task\n  //   const newTask = {id, ...task}\n  //   setTasks([...todo,newTask])\n  // }\n\n  //Add Task with JSON\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n  const data = await res.json() \n  setTasks([...todo,data])\n  }\n\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE'\n    })\n    setTasks(todo.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const tasktoToggle = await fetchTask(id)\n    const updTask = {...tasktoToggle,\n    reminder: !tasktoToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    // Changes task reminder to true or false {...task}: spreads across all of the task properties and values\n    setTasks(todo.map((task) => task.id === id ? {\n      ...task, reminder: data.reminder} : task))\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      {/* Error of type due to Header.propTypes in Header.js */}\n      {/* <Header title={1}/>  */}\n      <Header onAdd={()=> setShowAddTask(!showAddTask)} showAdd={showAddTask}/> \n      <Route path='/' exact render={(props)=>(\n        <> \n          {/* Ternary operator without an ?, doesn't have an else */}\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          { todo.length > 0 ? <Tasks tasks= {todo} onDelete={deleteTask} onToggle = {toggleReminder}/> : 'No pending tasks'}\n        </>\n      )}/>\n      <Route path='/about' component={About}/>\n      <Footer />\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}